{$DEFINE SRLT_GEOMETRY_INCLUDED}
{$IFNDEF SRLT_UTILS}
  {$I SRLT/utils.simba}
{$ENDIF}

type
  TCuboid = record
    Top, Bottom: TQuad;
  end;
  TCuboidArray = array of TCuboid;

function TCuboid.Corners(): TPointArray;
begin
  Result := Self.Top.Corners + Self.Bottom.Corners;
  Result := Result.ConvexHull();
end;

function TCuboid.Polygon(): TPolygon;
begin
  Result := Self.Corners();
end;

function TCuboid.Center(): TPoint;
begin
  Result := Self.Bottom.Mean + Self.Top.Mean;
  Result := [Result.X div 2, Result.Y div 2];
end;

function TCuboid.Bounds(): TBox;
begin
  Result := Self.Top.Bounds.Combine(Self.Bottom.Bounds);
end;

function TCuboid.Edges(): TPointArray;
begin
  Result := Self.Corners().Connect();
end;

function TCuboid.ShapeFill(): TPointArray;
begin
  Result := Self.Edges().ShapeFill();
end;


function TCuboid.Filter(arr: TPointArray): TPointArray;
begin
  Result := arr.ExcludePolygon(Self.Polygon());
end;


procedure ShowOnClient(cuboid: TCuboid); overload;
var
  img: TImage;
begin
  img := TImage.CreateFromTarget();

  img.DrawColor := $00FFFF;
  img.DrawTPA(cuboid.Bottom.Corners.Connect().Grow(1));
  img.DrawTPA(cuboid.Bottom.Corners.Connect().Grow(1));

  img.DrawColor := $FFFFFF;
  img.DrawTPA(cuboid.Edges());

  img.Show();
  img.Free();
end;
