{$DEFINE SRLT_ITEM_INCLUDED}
{$INCLUDE_ONCE SRLT/utils.simba}

type
  TRSItem = String;
  TRSItemArray = array of TRSItem;

  TRSBankItem = record
    Item: TRSItem;
    Quantity: Integer;
    Noted: Boolean;
  end;

  TRSBankItemArray = array of TRSBankItem;

function TRSItem.HasAmount(): Boolean;
begin
  Result := Self.EndsWith(')', True);
end;

(*
## TRSItem.SimplifyName
```pascal
function TRSItem.SimplifyName(): String;
```
Internal helper function to get a human like short item name, usually to search.

Example:
```pascal
item := 'Amulet of glory(6)';
WriteLn item.SimplifyName();
```
*)
function TRSItem.SimplifyName(): String;
var
  str: String;
  short, long: Integer;
begin
  Result := ToStr(Self).ToLower();
  if Result.EndsWith(')') then Result := Result.Before('(');

  long := Length(Result);
  short := Min(0, long - Ceil(long/3));
  Result := Result.CopyRange(0, Random(short, long));
end;

function TRSItem.ToBankItem(): TRSBankItem;
begin
  Result.Quantity := 1;
  Result.Noted := Self.StartsWith('Noted ', False);
  if Result.Noted then Result.Item := Self.After('Noted ')
  else Result.Item := Self;
end;

function TRSBankItem.ToItem(): TRSItem;
begin
  Result := Self.Item;
  if Self.Noted then
    Result := 'Noted ' + Result.ToLower();
end;

