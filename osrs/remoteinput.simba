{$DEFINE SRLT_REMOTEINPUT_INCLUDED}
{$INCLUDE_ONCE SRLT/osrs.simba}

{$loadlib ../plugins/libremoteinput/libremoteinput}

type
  TRemoteInput = record
    EIOS: Pointer;
    Canvas: TExternalCanvas;
  end;

procedure TRemoteInput.Setup();
const
  TIMEOUT: UInt64 := GetTickCount() + 2000;
begin
  if Target.TargetWindow.GetClassName() <> 'SunAwtCanvas' then Exit;

  RIInject(GetSimbaTargetPID());

  repeat
    Self.EIOS := EIOS_PairClient(GetSimbaTargetPID());
    if Self.EIOS <> nil then Break;
    Sleep(100);
  until GetTickCount() > TIMEOUT;

  if Self.EIOS = nil then
  begin
    WriteLn GetDebugLn('RemoteInput', 'Invalid target for RemoteInput, RemoteInput will not be used.', EErrorLevel.WARN);
    Exit;
  end;

  //Target.SetEIOS({$MACRO LOADEDLIB(libremoteinput)}, ToString(GetSimbaTargetPID()));
  Target.SetPlugin({$MACRO LOADEDLIB(libremoteinput)}, ToStr(GetSimbaTargetPID()), Self.Canvas);
end;

procedure TRemoteInput.LoseFocus();
var
  space: TBoxArray;
begin
  space := Target.Bounds.Expand(50).Invert(Target.Bounds.Expand(500));
  if Length(space) = 0 then Exit;

  Target.MouseMove(Space.Random());
  Target.MouseClick(EMouseButton.LEFT);
end;

procedure TRemoteInput.LoseFocus(delay: Integer); overload;
begin
  Sleep(delay);
  Self.LoseFocus();
end;


function TRemoteInput.IsInputEnabled(): Boolean;
begin
  Result := EIOS_IsMouseInputEnabled(Self.EIOS) and EIOS_IsKeyboardInputEnabled(Self.EIOS);
end;


procedure TRemoteInput.DisableRealInput();
begin
  EIOS_SetMouseInputEnabled(Self.EIOS, False);
  EIOS_SetKeyboardInputEnabled(Self.EIOS, False);
end;

procedure TRemoteInput.EnableRealInput();
begin
  EIOS_SetMouseInputEnabled(Self.EIOS, True);
  EIOS_SetKeyboardInputEnabled(Self.EIOS, True);
end;


var
  RemoteInput: TRemoteInput;

{$IFNDEF SRLT_DISABLE_REMOTEINPUT}
begin
  RemoteInput.Setup();
end;
{$ENDIF}
