(*
# Login World Switcher
The login world switcher is the world selecting interface you get when you
click the world button on the {ref}`Login` screen:
```{figure} ../../images/login_worldswitcher.png
```
*)
{$DEFINE WL_LOGIN_WORLDSWITCHER_INCLUDED}
{$INCLUDE_ONCE WaspLib/osrs.simba}

type
(*
## TRSLoginWorldSwitcher
Reponsible for handling the login screen world switcher.

This record holds information about the several buttons it has like you can see
in this image:
```{figure} ../../images/login_worldswitcher_debug.png
```
*)
  TRSLoginWorldSwitcher = record
    Bounds: TBox;
    OpenButton, CancelButton, LeftButton, RightButton: TBox;
    CurrentWorld: Integer;
    WorldBoxes: TBoxArray;

    AllowDangerousWorlds: Boolean;
  end;

(*
## TRSLoginWorldSwitcher.Setup
```pascal
procedure TRSLoginWorldSwitcher.Setup();
```
Internal method used to setup the {ref}`TRSLoginWorldSwitcher` coordinates.
This is automatically called for you on the {ref}`LoginWorldSwitcher variable`.
*)
procedure TRSLoginWorldSwitcher.Setup();
begin
  Self.Bounds.X1 := Target.Width div 2 - 382;
  Self.Bounds.X2 := Target.Width div 2 + 382;
  Self.Bounds.Y1 := Target.Bounds.Y1;
  Self.Bounds.Y2 := Self.Bounds.Y1 + 502;

  Self.CancelButton.X1 := Self.Bounds.X2 - 57;
  Self.CancelButton.Y1 := Self.Bounds.Y1 + 4;
  Self.CancelButton.X2 := Self.Bounds.X2 - 8;
  Self.CancelButton.Y2 := Self.Bounds.Y1 + 19;

  Self.OpenButton.X1 := Self.Bounds.X1 + 10;
  Self.OpenButton.Y1 := Self.Bounds.Y2 - 38;
  Self.OpenButton.X2 := Self.OpenButton.X1 + 89;
  Self.OpenButton.Y2 := Self.OpenButton.Y1 + 32;

  Self.WorldBoxes := TBoxArray.Create(Self.Bounds.TopLeft.Offset(62, 35), 7, 24, 84, 18, [9, 1]);

  Self.LeftButton.X1 := Target.Bounds.X1 + 9;
  Self.LeftButton.Y1 := Target.Bounds.Height div 2 - 10;
  Self.LeftButton.X2 := Self.LeftButton.X1 + 42;
  Self.LeftButton.Y2 := Self.LeftButton.Y1 + 28;

  Self.RightButton.X2 := Target.Bounds.X2 - 7;
  Self.RightButton.Y1 := Target.Bounds.Height div 2 - 10;
  Self.RightButton.X1 := Self.RightButton.X2 - 42;
  Self.RightButton.Y2 := Self.RightButton.Y1 + 28;
end;

(*
## LoginWorldSwitcher.IsOpen
```pascal
function TRSLoginWorldSwitcher.IsOpen(): Boolean;
```
Returns True/False if the login screen world switcher is currently open.

Example:
```pascal
WriteLn LoginWorldSwitcher.IsOpen();
```
*)
function TRSLoginWorldSwitcher.IsOpen(): Boolean;
begin
  Result := Target.HasColor($FFFFFF, 0, 61, Self.CancelButton);
end;

(*
## LoginWorldSwitcher.WaitOpen
```pascal
function TRSLoginWorldSwitcher.WaitOpen(time: Integer = 600; interval: Integer = -1): Boolean;
```
Returns True/False if the login screen world switcher opens within `time` milliseconds.

Example:
```pascal
WriteLn LoginWorldSwitcher.WaitOpen();
```
*)
function TRSLoginWorldSwitcher.WaitOpen(time: Integer = 600; interval: Integer = -1): Boolean;
begin
  if interval < 0 then interval := RandomMode(100, 50, 1500);
  Result := SleepUntil(Self.IsOpen(), interval, time);
end;

(*
## LoginWorldSwitcher.Close
```pascal
function TRSLoginWorldSwitcher.Close(): Boolean;
```
Attempts to close the login screen world switcher.

Example:
```pascal
if LoginWorldSwitcher.IsOpen() then
  LoginWorldSwitcher.Close();
```
*)
function TRSLoginWorldSwitcher.Close(): Boolean;
begin
  if not Self.IsOpen() then Exit(True);
  Mouse.Click(Self.CancelButton, EMouseButton.LEFT);
  Result := SleepUntil(not Self.IsOpen(), RandomMode(100, 50, 1500), 600);
end;

(*
## LoginWorldSwitcher.Open
```pascal
function TRSLoginWorldSwitcher.Open(): Boolean;
```
Attempts to open the login screen world switcher.

Example:
```pascal
if not LoginWorldSwitcher.IsOpen() then
  LoginWorldSwitcher.Open();
```
*)
function TRSLoginWorldSwitcher.Open(): Boolean;
begin
  if Self.IsOpen() then Exit(True);
  Mouse.Click(Self.OpenButton, EMouseButton.LEFT);
  Result := Self.WaitOpen();
end;


(*
## LoginWorldSwitcher.Read
```pascal
function TRSLoginWorldSwitcher.Read(index: Integer): Integer;
```
Returns the number of the world box at the `index` you specify.

Example:
```pascal
if LoginWorldSwitcher.IsOpen() then
  WriteLn LoginWorldSwitcher.Read(0);
```
*)
function TRSLoginWorldSwitcher.Read(index: Integer): Integer;
begin
  Result := OCR.RecognizeNumber(Self.WorldBoxes[index], RSFonts.BOLD, [$000000, $0000FF], 0);
end;


(*
## LoginWorldSwitcher Pagination
```pascal
function TRSLoginWorldSwitcher.PreviousPage(): Boolean;
function TRSLoginWorldSwitcher.NextPage(): Boolean;
```
Attempts to switch the current login screen world switcher page using the
`LoginWorldSwitcher.LeftButton` and `LoginWorldSwitcher.RightButton`.
Returns True if we successfully changed page.

Example:
```pascal
if LoginWorldSwitcher.IsOpen() then
  LoginWorldSwitcher.NextPage();
```
*)
function TRSLoginWorldSwitcher.PreviousPage(): Boolean;
var
  first: Integer;
begin
  first := Self.Read(0);
  Mouse.Click(Self.LeftButton, EMouseButton.LEFT);
  Result := SleepUntil(Self.Read(0) <> first, RandomMode(100, 50, 1500), 600);
  Sleep(400, 1200);
end;

function TRSLoginWorldSwitcher.NextPage(): Boolean;
var
  first: Integer;
begin
  if Target.HasColor($0, 0, 1615, Self.WorldBoxes[High(Self.WorldBoxes)]) then Exit;

  first := Self.Read(0);
  Mouse.Click(Self.RightButton, EMouseButton.LEFT);
  Result := SleepUntil(Self.Read(0) <> first, RandomMode(100, 50, 1500), 600);
  Sleep(400, 1200);
end;


(*
## LoginWorldSwitcher GetCurrent
```pascal
function TRSLoginWorldSwitcher.GetCurrent(): Integer;
```
Attempts to get our currently selected world.
For this, if the login screen world switcher is open, we close it first, as the
current world can only be read from the login screen.

Example:
```pascal
WriteLn LoginWorldSwitcher.GetCurrent();
```
*)
function TRSLoginWorldSwitcher.GetCurrent(): Integer;
begin
  if not Self.Close() then Exit;
  Result := OCR.RecognizeNumber(Self.OpenButton, RSFonts.BOLD_SHADOW, [$FFFFFF], 0);
  if InRange(Self.CurrentWorld, 301, 580) then Self.CurrentWorld := Result;
end;


(*
## LoginWorldSwitcher.Find
```pascal
function TRSLoginWorldSwitcher.Find(world: Integer; out index: Integer): Boolean;
```
Attempts to find the specified `world`.
For this, {ref}`LoginWorldSwitcher Pagination` will be used if required.
If the world we specified is found, the function returns `True` and the index of
of the button is returned through `index`.

Example:
```pascal
WriteLn LoginWorldSwitcher.Find(303, idx);
```
*)
function TRSLoginWorldSwitcher.Find(world: Integer; out index: Integer): Boolean;
begin
  repeat
    for index := 0 to High(Self.WorldBoxes) do
      if OCR.RecognizeNumber(Self.WorldBoxes[index], RSFonts.BOLD, [$000000, $0000FF], 0) = world then
        Exit(True);
  until not Self.NextPage();

  Self.Close();
  index := -1;
end;

(*
## LoginWorldSwitcher.Switch
```pascal
function TRSLoginWorldSwitcher.Switch(world: Integer): Boolean;
```
Attempts to switch to the specified `world`.
For this, {ref}`LoginWorldSwitcher Pagination` will be used if required.
If the world we specified is found and we successfully switch to it the function
returns `True`.

Example:
```pascal
WriteLn LoginWorldSwitcher.Switch(303);
```
*)
function TRSLoginWorldSwitcher.Switch(world: Integer): Boolean;
var
  idx: Integer;
begin
  if Self.CurrentWorld = world then Exit(True);
  if not InRange(Self.CurrentWorld, 301, 580) and not Self.IsOpen() and
    (Self.GetCurrent() = world) then
    Exit(True);

  if not Self.Open() then Exit;
  if not Self.Find(world, idx) then Exit;

  if not Self.AllowDangerousWorlds and
     not Target.HasColor(ColorTolerance($878254, 14.762, EColorSpace.LCH, [1.077, 1.714, 0.211]), 500, Self.WorldBoxes[idx]) then
      raise GetDebugLn('Login.WorldPicker', 'You are trying to login into a dangerous world! If this is intentional, enable dangerous worlds.');

  Mouse.Click(Self.WorldBoxes[idx], EMouseButton.LEFT);

  Result := SleepUntil(not Self.IsOpen(), 50, 600) and (Self.GetCurrent() = world);
end;


var
(*
## LoginWorldSwitcher variable
Global {ref}`TRSLoginWorldSwitcher` variable.
*)
  LoginWorldSwitcher: TRSLoginWorldSwitcher;
