

{$DEFINE WL_ANVIL_INCLUDED}
{$INCLUDE_ONCE WaspLib/osrs.simba}

type

  TRSAnvil = record
    Title: TRSInterfaceTitle;
    Slots: TRSSlotInterface;
    Items: TRSItemInterface;
    Bounds, SlotsArea: TBox;
    SlotBoxes: TBoxArray;
  end;

function TRSAnvil.GetSlots(): TBoxArray;
var
  i: Integer;
begin
  for i := 0 to High(Self.SlotBoxes) do
    if Target.HasColor($00FF00, 0, 1, Self.SlotBoxes[i]) or Target.HasColor($1F98FF, 0, 1, Self.SlotBoxes[i]) then
      Result += Self.SlotBoxes[i];
end;


procedure TRSAnvil.SetupInterface();
var
  i: Integer;
begin
  case RSClient.Mode of
    ERSMode.FIXED: Self.Bounds := MSInterface.CreateBounds([0, 2, 0, -1], 500, 320);
    ERSMode.RESIZABLE, ERSMode.MODERN_COMPACT, ERSMode.MODERN_WIDE:
      Self.Bounds := MSInterface.CreateBounds([0, -1, 0, 0], 500, 320);
  end;

  Self.Title.Setup(Self.Bounds);

  Self.SlotsArea.X1 := Self.Bounds.X1 + 4;
  Self.SlotsArea.Y1 := Self.Bounds.Y1 + 30;
  Self.SlotsArea.X2 := Self.Bounds.X2 - 50;
  Self.SlotsArea.Y2 := Self.Bounds.Y2 - 4;

  Self.SlotBoxes := TBoxArray.Create(Self.Bounds.TopLeft + [10, 36], 6, 5, 54, 54, [26, 1]);
  for i in [5, 11, 17, 23, 29] do
    Self.SlotBoxes[i] := Self.SlotBoxes[i].Offset([-15, 0]);

  Self.Slots.Setup('Bank.Slots', Self.SlotBoxes, @Self.GetSlots);
  Self.Items.Setup('Bank.Items', @Self.Slots, [0, 10]);
end;



function TRSAnvil.IsOpen(): Boolean;
begin
  Result := MSInterface.IsOpen(ERSInterfaceType.CLASSIC) and
            Target.HasColor($00FF00, 0, 300, Self.SlotsArea);
end;


function TRSAnvil.WaitOpen(time: Integer; interval: Integer = -1): Boolean;
begin
  if interval < 0 then interval := RandomMode(100, 50, 1500);
  Result := SleepUntil(Self.IsOpen(), interval, time);
end;

var

  Anvil: TRSAnvil;
