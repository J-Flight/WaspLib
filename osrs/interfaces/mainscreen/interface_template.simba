

{$DEFINE WL_COLLECTBOX_INCLUDED}
{$INCLUDE_ONCE WaspLib/osrs.simba}

type

  TRSCollectBox = record
    Bounds: TBox;
    Buttons: TBoxArray;
  end;


procedure TRSCollectBox.SetupInterface();
begin
  with InterfaceArea do
  begin
    Self.Bounds.X1 := Max(Floor(Center.X-(Width-1)/2), Floor(Center.X-487/2));
    Self.Bounds.Y1 := Max(Floor(Center.Y-(Height-3)/2), Center.Y-148);
    Self.Bounds.X2 := Min(Floor(Center.X+(Width-1)/2), Floor(Center.X +487/2));
    Self.Bounds.Y2 := Min(Floor(Center.Y+(Height-3)/2), Center.Y+157);
  end;

  Self.Buttons := TBoxArray.Create(Self.Bounds.TopLeft.Offset(21,84), 3, 3, 63, 63, [31, 9]);
  Self.Buttons.Insert(Self.Buttons[2].Offset([84, 0]), 3);
end;


function TRSCollectBox.IsOpen(): Boolean;
begin
  Result := Target.HasColor($060D56, 10, 3400, Self.Buttons[0]);
end;


function TRSCollectBox.WaitOpen(time: Integer = 600; interval: Integer = -1): Boolean;
begin
  if interval < 0 then interval := RandomMode(100, 50, 1500);
  Result := SleepUntil(Self.IsOpen(), interval, time);
end;




procedure TRSCollectBox.Draw(img: TImage);
begin
  if not Self.IsOpen() then Exit;

  img.DrawColor := $00FFFF;
  img.DrawBox(Self.Bounds);

  img.DrawColor := $FFFFFF;
  img.DrawBoxArray(Self.Buttons, False);
end;

procedure ShowOnTarget(CollectBox: TRSCollectBox); overload;
var
  img: TImage;
begin
  img := Target.GetImage();
  CollectBox.Draw(img);
  img.Show();
  img.Free();
end;

var

  CollectBox: TRSCollectBox;
