(*
# GrandExchangeChat
Methods to interact with the GrandExchangeChat interface:
```{figure} ../../images/gec_interface.png
```
*)

{$DEFINE WL_GRANDEXCHANGE_CHAT_INCLUDED}
{$INCLUDE_ONCE WaspLib/osrs.simba}

type
(*
## TRSGrandExchangeChat
Record responsible to handle the {ref}`GrandExchangeChat` interface.
*)
  TRSGrandExchangeChat = record
    Bounds, Header: TBox;
    Scroll: TRSScrollBar;
  end;

function TRSGrandExchangeChat.IsOpen(): Boolean; forward;

(*
## GrandExchangeChat.SetupInterface
```pascal
procedure TRSGrandExchangeChat.SetupInterface();
```
Internal method used to setup the {ref}`TRSGrandExchangeChat` coordinates.
This is automatically called for you on the {ref}`GrandExchangeChat variable`.
*)
procedure TRSGrandExchangeChat.SetupInterface();
begin
  Self.Bounds := Chat.Bounds;

  Self.Header.X1 := Self.Bounds.X1 + 7;
  Self.Header.Y1 := Self.Bounds.Y1 + 7;
  Self.Header.X2 := Self.Bounds.X2 - 7;
  Self.Header.Y2 := Self.Bounds.Y1 + 26;

  Self.Scroll.Area.X1 := Self.Bounds.X1 + 9;
  Self.Scroll.Area.Y1 := Self.Bounds.Y1 + 29;
  Self.Scroll.Area.X2 := Self.Bounds.X2 - 25;
  Self.Scroll.Area.Y2 := Self.Bounds.Y2 - 9;

  Self.Scroll.Setup();
end;

(*
## GrandExchangeChat.IsOpen
```pascal
function TRSGrandExchangeChat.IsOpen(): Boolean;
```
Returns true if the Grand Exchange is open.

Example:
```pascal
WriteLn GrandExchangeChat.IsOpen();
```
*)
function TRSGrandExchangeChat.IsOpen(): Boolean;
var
  match: Single;
begin
  if BankPin.IsOpen() then
  begin
    if not BankPin.WaitLoading(3000) then
      raise GetDebugLn('BankPin', 'GrandExchangeChat pin buttons don''t seem to have loaded in 3 seconds.');

    if not BankPin.Enter(Profiles.GetPin()) then
      raise GetDebugLn('BankPin', 'Failed to enter GrandExchangeChat pin.');
  end;

  match := OCR.Locate(Self.Header, 'What would you like to buy?', [RSColors.TEXT_BLACK], 0, RSFonts.BOLD);
  Result := match >= 0.8;
end;

(*
## GrandExchangeChat.WaitOpen
```pascal
function TRSGrandExchangeChat.WaitOpen(time: Integer; interval: Integer = -1): Boolean;
```
Returns true if the Grand Exchange is open within `time` milliseconds.

## Example:
```pascal
WriteLn GrandExchangeChat.WaitOpen();
```
*)
function TRSGrandExchangeChat.WaitOpen(time: Integer; interval: Integer = -1): Boolean;
begin
  if interval < 0 then interval := RandomMode(100, 50, 1500);
  Result := SleepUntil(Self.IsOpen(), interval, time);
end;

(*
## GrandExchangeChat.SearchText
```pascal
property TRSGrandExchangeChat.SearchText: String;
property TRSGrandExchangeChat.SearchText(search: String): Boolean;
```
Returns the current {ref}`GrandExchangeChat` search or updates it.

```{figure} ../../images/gec_search.png
```

Example:
```pascal
WriteLn GrandExchangeChat.SearchText;
WriteLn GrandExchangeChat.SearchText['Bandos tassets'];
WriteLn GrandExchangeChat.SearchText;
WriteLn GrandExchangeChat.SearchText['Bandos chestplate'];
WriteLn GrandExchangeChat.SearchText;
WriteLn GrandExchangeChat.SearchText['Banana'];
WriteLn GrandExchangeChat.SearchText;
```
*)
property TRSGrandExchangeChat.SearchText: String;
begin
  Result := OCR.Recognize(Self.Header, RSFonts.BOLD, [RSColors.TEXT_DARK_BLUE], 0).Before('*');
end;

property TRSGrandExchangeChat.SearchText(search: String): Boolean;
var
  txt: String;
  i: Integer;
begin
  txt := Self.SearchText;
  search := search.ToLower();
  if txt = search then Exit(True);

  if (txt <> '') then
  begin
    for i := 1 to Length(txt) do
    begin
      if i > Length(search) then Break;
      if search[i] = txt[i] then Continue;
      Break;
    end;

    for i to Length(txt) do
    begin
      Keyboard.KeyPress(EKeyCode.BACK);
      txt.Pop;
      Sleep(50, 120);
    end;

    if Self.SearchText <> txt then
      Exit(Self.SearchText[search]);
  end;

  if txt = search then Exit(True);

  search := search.CopyRange(Length(txt)+1, Length(search));

  Keyboard.Send(search);
  Sleep(50, 120);
  Result := search = Self.SearchText;
end;


(*
## GrandExchangeChat.Grid
```pascal
property TRSGrandExchangeChat.Grid: TBoxArray;
```
Returns the {ref}`GrandExchangeChat` search grid.

Example:
```pascal

```
```{figure} ../../images/gec_grid.png
```

*)
property TRSGrandExchangeChat.Grid: TBoxArray;
var
  b, tmp, offset: TBox;
  tpa: TPointArray;
  atpa: T2DPointArray;
  i, h, newH: Integer;
begin
  with Self.Scroll.Area do
    b := [X1+40, Y1+8, X1+160, Y1+80];
  tpa := Target.FindColor($0, 0, b);
  if tpa = [] then Exit;

  //remove small chars, like "'"
  tpa := tpa.Cluster(1.5, 1.5).ExcludeSize(5, EComparator.__LE__).Merge();
  atpa := tpa.Cluster(12, 8);

  //for i := 0 to High(atpa) do
  //begin
  //  b := atpa[i].Bounds;
  //  newH := b.Height;
  //  if newH > h then
  //  begin
  //    tmp := b;
  //    h := newH;
  //  end;
  //end;
  //
  //if h < 20 then
  //  b := [Self.Scroll.Area.X1+2, tmp.Y1-10, Self.Scroll.Area.X1+162, tmp.Y2+8]
  //else
  //  b := [Self.Scroll.Area.X1+2, tmp.Y1-4, Self.Scroll.Area.X1+162, tmp.Y2+6];
  //
  //Result += b;
  //offset := b;
  //
  //h := b.Height;
  //
  //repeat
  //  offset := offset.Offset([0,-h]);
  //  b := offset.Clip(Self.Scroll.Area);
  //  if b.Height >= 28 then
  //    Result += offset;
  //until offset.Y1 < Self.Scroll.Area.Y1;
  //
  //repeat
  //  offset := offset.Offset([0,h]);
  //  b := offset.Clip(Self.Scroll.Area);
  //  if b.Height >= 32 then
  //    Result += offset;
  //until offset.Y2 > Self.Scroll.Area.Y2;
end;


var
(*
## GrandExchangeChat variable
Global {ref}`TRSGrandExchangeChat` variable.
*)
  GrandExchangeChat: TRSGrandExchangeChat;
