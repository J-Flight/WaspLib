
{$DEFINE WL_HOUSE_VIEWER_INCLUDED}
{$INCLUDE_ONCE WaspLib/osrs.simba}

type

  TRSHouseViewer = record
    Bounds, LayoutPanel: TBox;
  end;


procedure TRSHouseViewer.SetupInterface();
begin
  case RSClient.Mode of
    ERSMode.FIXED:
      Self.Bounds := MSInterface.CreateBounds([-1, 0, 0, 0], 498, 304);
    ERSMode.RESIZABLE, ERSMode.MODERN_COMPACT, ERSMode.MODERN_WIDE:
      Self.Bounds := MSInterface.CreateBounds([0, 1, 0, -3], 498, 304);
  end;

  with Self.Bounds do
    Self.LayoutPanel := [X1+35, Y1+35, X1+269, Y2-35];
end;


property TRSHouseViewer.LayoutBounds: TBox;
begin
  Result := Target.FindColor(
    [$3C3CB3, 0.795, EColorSpace.HSL, [2.816, 0.057, 0.129]],
    Self.LayoutPanel
  ).Bounds();
end;

property TRSHouseViewer.RoomBoxes: TBoxArray;
begin
  Result := Self.LayoutBounds.Partition(7,7);
end;



procedure TRSHouseViewer.LoadHouse();
var
  boxes: TBoxArray;
  i, rotation, offset: Integer;
  room: THouseRoom;
  t: Double;
begin
  t := PerformanceTime();
  House.Loader.Init();

  boxes := Self.RoomBoxes;

  offset := House.Loader.AMOUNT div 2 - 3;
  for i := 0 to High(boxes) do
  begin
    room.Room := HouseLayoutFinder.Compare(boxes[i], rotation);
    room.Rotation := rotation;
    House.Loader.DrawMap(room, [offset + (i mod 7), offset + (i div 7)]);
  end;

  WriteLn GetDebugLn('HouseViewer', 'Took ' + ToStr(Round(PerformanceTime()-t, 3)) + 'ms to load the house.', ELogLevel.SUCCESS);
end;

var

  HouseViewer: TRSHouseViewer;
