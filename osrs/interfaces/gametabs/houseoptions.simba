(*
# HouseOptions
Methods to interact with the house options that live on the options gametab.

```{figure} ../../images/house_options.png
The house options interface.
```
*)

{$DEFINE SRLT_HOUSEOPTIONS_INCLUDED}
{$INCLUDE_ONCE SRLT/osrs.simba}

type
(*
## ERSHouseOptionsButton
```pascal
ERSHouseOptionsButton = enum(CLOSE, VIEWER, EXPEL, SERVANT, LEAVE);
```
It should be self explanatory what they represent.
*)
  ERSHouseOptionsButton = enum(CLOSE, VIEWER, EXPEL, SERVANT, LEAVE);

(*
## TRSHouseOptions
Main record responsible with interacting with the house options.
*)
  TRSHouseOptions = record
    Buttons: array [ERSHouseOptionsButton] of TBox;
  end;


(*
## HouseOptions.SetupGameTab
```pascal
procedure TRSHouseOptions.SetupGameTab();
```
Internal method used to setup the {ref}`TRSHouseOptions` coordinates.
This is automatically called for you on the {ref}`HouseOptions` variable.
*)
procedure TRSHouseOptions.SetupGameTab();
begin
  with Self.Buttons[ERSHouseOptionsButton.CLOSE] do
  begin
    X1 := GameTab.Bounds.X2 - 22;
    Y1 := GameTab.Bounds.Y1 + 9;
    X2 := X1 + 20;
    Y2 := Y1 + 20;
  end;

  with Self.Buttons[ERSHouseOptionsButton.VIEWER] do
  begin
    X1 := GameTab.Bounds.X1 + 7;
    Y1 := GameTab.Bounds.Y1 + 26;
    X2 := X1 + 104;
    Y2 := Y1 + 39;
  end;

  with Self.Buttons[ERSHouseOptionsButton.EXPEL] do
  begin
    X1 := GameTab.Bounds.X1 + 7;
    Y1 := GameTab.Bounds.Y2 - 105;
    X2 := GameTab.Bounds.X2 - 7;
    Y2 := Y1 + 26;
  end;

  with Self.Buttons[ERSHouseOptionsButton.SERVANT] do
  begin
    X1 := GameTab.Bounds.X1 + 7;
    Y1 := GameTab.Bounds.Y2 - 76;
    X2 := GameTab.Bounds.X2 - 7;
    Y2 := Y1 + 26;
  end;

  with Self.Buttons[ERSHouseOptionsButton.CLOSE] do
  begin
    X1 := GameTab.Bounds.X1 + 7;
    Y1 := GameTab.Bounds.Y2 - 47;
    X2 := GameTab.Bounds.X2 - 7;
    Y2 := Y1 + 26;
  end;
end;

(*
## HouseOptions.IsOpen
```pascal
function TRSHouseOptions.IsOpen(): Boolean;
```
Returns True/False on whether the house options are open.

Example:
```pascal
WriteLn HouseOptions.IsOpen();
```
*)
function TRSHouseOptions.IsOpen(): Boolean;
begin
  Result := Target.HasColor(ColorTolerance($4C9055, 2.496, EColorSpace.HSV, [2.389, 0.261, 0.351]), 148, GameTab.Bounds);
end;

(*
## HouseOptions.WaitOpen
```pascal
function TRSHouseOptions.WaitOpen(time: Integer = 600; interval: Integer = -1): Boolean;
```
Returns true if the house options open within `time` milliseconds.

Example:
```pascal
WriteLn HouseOptions.WaitOpen();
```
*)
function TRSHouseOptions.WaitOpen(time: Integer = 600; interval: Integer = -1): Boolean;
begin
  if interval < 0 then interval := RandomMode(100, 50, 1500);
  Result := SleepUntil(Self.IsOpen(), interval, time);
end;

(*
## HouseOptions.Open
```pascal
function TRSHouseOptions.Open(): Boolean;
```
Attempts to open the house options on the options gametab.

This method is overriden after {ref}`Options`, for more information check
{ref}`HouseOptions.Open override`.

Example:
```pascal
WriteLn HouseOptions.Open();
```
*)
function TRSHouseOptions.Open(): Boolean;
begin
  Result := Self.WaitOpen();
end;

(*
## HouseOptions.Close
```pascal
function TRSHouseOptions.Close(): Boolean;
```
Attempts to close the house options.

Example:
```pascal
WriteLn HouseOptions.Close();
```
*)
function TRSHouseOptions.Close(): Boolean;
begin
  if not Self.IsOpen() then Exit(True);
  Mouse.Click(Self.Buttons[ERSHouseOptionsButton.CLOSE], EMouseButton.LEFT);
  Result := SleepUntil(not Self.IsOpen(), RandomMode(100, 50, 1500), 600);
end;


(*
## HouseOptions.ExpelGuests
```pascal
function TRSHouseOptions.ExpelGuests(): Boolean;
```
Attempts to expel guests through the house options button.

Example:
```pascal
WriteLn HouseOptions.ExpelGuests();
```
*)
function TRSHouseOptions.ExpelGuests(): Boolean;
begin
  if not Self.Open() then Exit();
  Mouse.Click(Self.Buttons[ERSHouseOptionsButton.EXPEL], EMouseButton.LEFT);
  Result := True; //TODO: Check if need anything else here.
end;

(*
## HouseOptions.CallServant
```pascal
function TRSHouseOptions.CallServant(): Boolean;
```
Attempts to call the house servant through the house options button.

For this to work you need to have a servant at your house and a
[bell-pull](https://oldschool.runescape.wiki/w/Bell_pull_space).

Example:
```pascal
WriteLn HouseOptions.CallServant();
```
*)
function TRSHouseOptions.CallServant(): Boolean;
begin
  if not Self.Open() then Exit();
  Mouse.Click(Self.Buttons[ERSHouseOptionsButton.SERVANT], EMouseButton.LEFT);
  Result := SleepUntil(Chat.GetTitle().ContainsAny(['utler', 'Repeat']), RandomMode(100, 50, 1500), 600);
end;

(*
## HouseOptions.LeaveHouse
```pascal
function TRSHouseOptions.LeaveHouse(): Boolean;
```
Attempts to leave the house through the house options button.

Example:
```pascal
WriteLn HouseOptions.LeaveHouse();
```
*)
function TRSHouseOptions.LeaveHouse(): Boolean;
begin
  if not Self.Open() then Exit();
  Mouse.Click(Self.Buttons[ERSHouseOptionsButton.LEAVE], EMouseButton.LEFT);
  Result := SleepUntil(not Self.IsOpen(), RandomMode(100, 50, 1500), 600);
end;

var
(*
## HouseOptions variable
Global {ref}`TRSHouseOptions` variable.
*)
  HouseOptions: TRSHouseOptions;
