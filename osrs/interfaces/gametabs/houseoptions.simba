

{$DEFINE WL_HOUSEOPTIONS_INCLUDED}
{$INCLUDE_ONCE WaspLib/osrs.simba}

type

  ERSHouseOptionsButton = enum(CLOSE, VIEWER, EXPEL, SERVANT, LEAVE);


  TRSHouseOptions = record
    Buttons: TBoxArray;
  end;



procedure TRSHouseOptions.SetupGameTab();
begin
  SetLength(Self.Buttons, 5);

  with Self.Buttons[ERSHouseOptionsButton.CLOSE] do
  begin
    X1 := GameTab.Bounds.X2 - 22;
    Y1 := GameTab.Bounds.Y1 + 9;
    X2 := X1 + 20;
    Y2 := Y1 + 20;
  end;

  with Self.Buttons[ERSHouseOptionsButton.VIEWER] do
  begin
    X1 := GameTab.Bounds.X1 + 7;
    Y1 := GameTab.Bounds.Y1 + 26;
    X2 := X1 + 104;
    Y2 := Y1 + 39;
  end;

  with Self.Buttons[ERSHouseOptionsButton.EXPEL] do
  begin
    X1 := GameTab.Bounds.X1 + 7;
    Y1 := GameTab.Bounds.Y2 - 105;
    X2 := GameTab.Bounds.X2 - 7;
    Y2 := Y1 + 26;
  end;

  with Self.Buttons[ERSHouseOptionsButton.SERVANT] do
  begin
    X1 := GameTab.Bounds.X1 + 7;
    Y1 := GameTab.Bounds.Y2 - 76;
    X2 := GameTab.Bounds.X2 - 7;
    Y2 := Y1 + 26;
  end;

  with Self.Buttons[ERSHouseOptionsButton.LEAVE] do
  begin
    X1 := GameTab.Bounds.X1 + 7;
    Y1 := GameTab.Bounds.Y2 - 47;
    X2 := GameTab.Bounds.X2 - 7;
    Y2 := Y1 + 26;
  end;
end;






function TRSHouseOptions.IsOpen(): Boolean;
begin
  Result := Target.HasColor(ColorTolerance($4C9055, 2.496, EColorSpace.HSV, [2.389, 0.261, 0.351]), 148, GameTab.Bounds);
end;


function TRSHouseOptions.WaitOpen(time: Integer = 600; interval: Integer = -1): Boolean;
begin
  if interval < 0 then interval := RandomMode(100, 50, 1500);
  Result := SleepUntil(Self.IsOpen(), interval, time);
end;


function TRSHouseOptions.Open(): Boolean;
begin
  Result := Self.WaitOpen();
end;


function TRSHouseOptions.Close(): Boolean;
begin
  if not Self.IsOpen() then Exit(True);
  Mouse.Click(Self.Buttons[ERSHouseOptionsButton.CLOSE], EMouseButton.LEFT);
  Result := SleepUntil(not Self.IsOpen(), RandomMode(100, 50, 1500), 600);
end;



function TRSHouseOptions.ExpelGuests(): Boolean;
begin
  if not Self.Open() then Exit();
  Mouse.Click(Self.Buttons[ERSHouseOptionsButton.EXPEL], EMouseButton.LEFT);
  Result := True; //TODO: Check if need anything else here.
end;


function TRSHouseOptions.CallServant(): Boolean;
begin
  if not Self.Open() then Exit();
  Mouse.Click(Self.Buttons[ERSHouseOptionsButton.SERVANT], EMouseButton.LEFT);
  Result := SleepUntil(Chat.GetTitle().ContainsAny(['utler', 'Repeat']), RandomMode(100, 50, 1500), 600);
end;


function TRSHouseOptions.LeaveHouse(): Boolean;
begin
  if not Self.Open() then Exit();
  Mouse.Click(Self.Buttons[ERSHouseOptionsButton.LEAVE], EMouseButton.LEFT);
  Result := SleepUntil(not Self.IsOpen(), RandomMode(100, 50, 1500), 600);
end;

var

  HouseOptions: TRSHouseOptions;
