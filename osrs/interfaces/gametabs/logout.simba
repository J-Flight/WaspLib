
{$DEFINE WL_LOGOUT_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osrs.simba}
{$ENDIF}

type

  ERSRating = (ONE, TWO, THREE, FOUR, FIVE);

  ERSLogoutButton = (WORLD_SWITCHER, CLICK_HERE);


  TRSLogout = record
    Ratings: array [ERSRating] of TRSButton;
    Buttons: array [ERSLoginButton] of TRSButton;
  end;


procedure TRSLogout.SetupGameTab();
var
  btns: TBoxArray;
  i: Integer;
begin
  btns := TBoxArray.Create(GameTab.TopLeft.Offset(2,61), 5, 1, 31, 35, [6, 0]);
  for i := 0 to High(btns) do
  begin
    Self.Ratings[i].EnabledColors := [[$0F1043, 0], [$23269F, 0.227]];
    Self.Ratings[i].Bounds := btns[i];
  end;

  Self.Buttons[ERSLogoutButton.WORLD_SWITCHER].EnabledColors := [[$0F1043, 0], [$23269F, 0.227]];
  Self.Buttons[ERSLogoutButton.CLICK_HERE].EnabledColors := [[$0F1043, 0], [$23269F, 0.227]];

  with GameTab.Bounds do
  begin
    Self.Buttons[ERSLogoutButton.WORLD_SWITCHER].Bounds := TBox.Create(X1+22, Y2-97, X2-22, Y2-66);
    Self.Buttons[ERSLogoutButton.CLICK_HERE].Bounds := TBox.Create(X1+22, Y2-49, X2-22, Y2-18);
  end;
end;






function TRSLogout.IsOpen(): Boolean;
begin
  Result := GameTabs.IsOpen(ERSGameTab.LOGOUT);
end;


function TRSLogout.Open(): Boolean;
begin
  Result := GameTabs.Open(ERSGameTab.LOGOUT);
  if Result and WorldSwitcher._IsOpen() then
    Result := WorldSwitcher.Close();
end;



function TRSLogout.IsRated(): Boolean;
begin
  Result := Self.Ratings[ERSRating.ONE].Enabled();
end;


function TRSLogout.Rate(star: ERSRating): Boolean;
begin
   if Self.Ratings[star].Enabled() and
      ((star = ERSRating.FIVE) or not Self.Ratings[star+1].Enabled()) then
       Exit(True);

   Self.Ratings[star].Click(EMouseButton.LEFT);
   Result := Self.Ratings[star].WaitEnabled();
end;


function TRSLogout.Logout(attempts: UInt32 = 5; time: UInt32 = 20000): Boolean;
var
  i: Integer;
  interval: UInt32;
  stars: ERSRating;
begin
  if not Self.Open() then Exit;
  if WorldSwitcher.Logout() then Exit(True);

  interval := time div attempts;

  if Biometrics.RandomBoolean(EBiometric.RATING) then
  begin
    if Biometrics.RandomBoolean(EBiometric.LIKES) then
      i := RandomLeft(4, 0)
    else
      i := RandomLeft(0, 4);

    stars := ERSRating(i);
    WriteLn GetDebugLn('Logout', 'Rating the game with ' + ToStr(stars) + ' stars before logging out.');
    Self.Rate(stars);
  end;

  if Keyboard.LastKey = EKeyCode.RETURN then
    Keyboard.RandomKey();  //unlock enter if using remote input

  for i := 1 to attempts do
  begin
    Self.Buttons[ERSLogoutButton.CLICK_HERE].Click();
    if SleepUntil(not RSClient.IsLoggedIn(), 500, interval + Random(-2000, 2000)) then
      Exit(True);
  end;
end;

var

  Logout: TRSLogout;
