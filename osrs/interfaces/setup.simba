//Design by olly.
{$DEFINE SRLT_SETUP_INCLUDED}
{$IFNDEF SRLT_OSRS}
  {$I SRLT/osrs.simba}
{$ENDIF}

procedure SetupInterfaces();
begin
  //interfaces that depend on other's bounds need to be in the right order
  //e.g., gametabs need to go after GameTab and GameTab after GameTabs.
  Minimap.SetupInterface();
  MainScreen.SetupInterface();
  GameTabs.SetupInterface();
  GameTab.SetupInterface();
  Inventory.SetupInterface();
  Options.SetupInterface();
  MM2MS.Projector.SetupProjection();
  Chat.SetupInterface();
  InterfaceArea.SetupInterface();
  RSInterface.SetupInterface();
  XPBar.SetupInterface();
  Prayer.SetupInterface();
end;

function TRSClient.IsLoggedIn(): Boolean; override;
var
  mode: ERSClientMode;
begin
  mode := Self.DetectClientMode();
  Result := mode <> ERSClientMode.UNKNOWN;

  if (mode <> ERSClientMode.UNKNOWN) and (mode <> Self.Mode) then
  begin
    Self.Mode := mode;
    WriteLn(GetDebugLn('RSClient', 'Client mode changed: ' + ToStr(Self.Mode), EErrorLevel.SUCCESS));
    SetupInterfaces();
  end;
end;

{$H-}
procedure TargetResized(var sender: TTarget; data: TTargetEventData);
begin
  if RSClient.Mode = ERSClientMode.UNKNOWN then Exit;
  SetupInterfaces();
end;
{$H+}

begin
  Target.AddEvent(ETargetEvent.TARGET_RESIZE, @TargetResized);
  RSClient.IsLoggedIn();
  if RSClient.Mode = ERSClientMode.UNKNOWN then
    RSClient.Mode := ERSClientMode.FIXED;
  SetupInterfaces();
end;
