
{$DEFINE WL_FAKE_INPUT_INCLUDED}
{$INCLUDE_ONCE WaspLib/osrs.simba}

{.$DEFINE WL_DISABLE_FAKE_INPUT}

{$IFNDEF WL_DISABLE_FAKE_INPUT}

{$loadlib ../plugins/libremoteinput/libremoteinput}
{$loadlib ../plugins/waspinput/waspinput}

type

  TRemoteInput = record
    Target: Pointer;
  end;


procedure TRemoteInput.Setup();
const
  TIMEOUT: UInt64 := GetTimeRunning() + 2000;
begin
  if GetSimbaTargetWindow().GetClassName() <> 'SunAwtCanvas' then Exit;

  RIInject(GetSimbaTargetPID());

  repeat
    Self.Target := EIOS_PairClient(GetSimbaTargetPID());
    if Self.Target <> nil then Break;
    Sleep(100);
  until GetTimeRunning() > TIMEOUT;

  if Self.Target = nil then
  begin
    WriteLn GetDebugLn('RemoteInput', 'Invalid target for RemoteInput, RemoteInput will not be used.', ELogLevel.WARN);
    Exit;
  end;

  Target.SetPlugin({$MACRO LOADEDLIB(libremoteinput)}, ToStr(GetSimbaTargetPID()), RSClient.Canvas);
end;

var

  RemoteInput: TRemoteInput;

type

  TWaspInput = record
    Target: Pointer;
  end;


procedure TWaspInput.Setup();
var
  pid: TProcessID;
begin
  if GetSimbaTargetWindow().GetClassName() <> 'JagRenderView' then Exit;

  pid := GetSimbaTargetPID();
  Inject({$MACRO LOADEDLIB(waspinput)}, pid);
  Target.SetPlugin({$MACRO LOADEDLIB(waspinput)}, ToStr(pid), RSClient.Canvas);
  Self.Target := @pid;
end;

var
  WaspInput: TWaspInput;
{$ENDIF}



procedure TRSClient.LoseFocus();
{$IFNDEF WL_DISABLE_FAKE_INPUT}
var
  space: TBoxArray;
{$ENDIF}
begin
  {$IFNDEF WL_DISABLE_FAKE_INPUT}
  case RSClient.Client of
    ERSClient.OFFICIAL:
      if WaspInput.Target <> nil then
      begin
        space := Target.Bounds.Expand(50).Invert(Target.Bounds.Expand(500));
        if Length(space) = 0 then Exit;

        WriteLn(GetDebugLn('RSClient', 'LoseFocus method is not implemented for WaspInput yet.', ELogLevel.WARN));
        Exit;
      end;
    ERSClient.LEGACY, ERSClient.RUNELITE:
      if RemoteInput.Target <> nil then
      begin
        space := Target.Bounds.Expand(50).Invert(Target.Bounds.Expand(500));
        if Length(space) = 0 then Exit;

        Target.MouseMove(Space.Random());
        Target.MouseClick(EMouseButton.LEFT);
        Exit;
      end;
  end;
  {$ENDIF}
  WriteLn(GetDebugLn('RSClient', 'LoseFocus method is not implemented without a fake input tool.', ELogLevel.WARN));
end;

procedure TRSClient.LoseFocus(delay: UInt32); overload;
begin
  Sleep(delay);
  Self.LoseFocus();
end;



function TRSClient.IsInputEnabled(): Boolean;
begin
  {$IFNDEF WL_DISABLE_FAKE_INPUT}
  case RSClient.Client of
    ERSClient.OFFICIAL:
      if WaspInput.Target <> nil then
        Exit(GetInputState());
    ERSClient.LEGACY, ERSClient.RUNELITE:
      if RemoteInput.Target <> nil then
        Exit(EIOS_IsMouseInputEnabled(RemoteInput.Target) and EIOS_IsKeyboardInputEnabled(RemoteInput.Target));
  end;
  {$ENDIF}
  WriteLn(GetDebugLn('RSClient', 'IsInputEnabled method is not implemented without a fake input tool.', ELogLevel.WARN));
  Result := False;
end;



procedure TRSClient.DisableRealInput();
begin
  {$IFNDEF WL_DISABLE_FAKE_INPUT}
  case RSClient.Client of
    ERSClient.OFFICIAL:
      if WaspInput.Target <> nil then
      begin
        SetInputState(False);
        Exit;
      end;
    ERSClient.LEGACY, ERSClient.RUNELITE:
      if RemoteInput.Target <> nil then
      begin
        EIOS_SetMouseInputEnabled(RemoteInput.Target, False);
        EIOS_SetKeyboardInputEnabled(RemoteInput.Target, False);
        Exit;
      end;
  end;
  {$ENDIF}
  WriteLn(GetDebugLn('RSClient', 'DisableRealInput method is not implemented without a fake input tool.', ELogLevel.WARN));
end;


procedure TRSClient.EnableRealInput();
begin
  {$IFNDEF WL_DISABLE_FAKE_INPUT}
  case RSClient.Client of
    ERSClient.OFFICIAL:
      if WaspInput.Target <> nil then
      begin
        SetInputState(True);
        Exit;
      end;
    ERSClient.LEGACY, ERSClient.RUNELITE:
      if RemoteInput.Target <> nil then
      begin
        EIOS_SetMouseInputEnabled(RemoteInput.Target, True);
        EIOS_SetKeyboardInputEnabled(RemoteInput.Target, True);
        Exit;
      end;
  end;
  {$ENDIF}
  WriteLn(GetDebugLn('RSClient', 'EnableRealInput method is not implemented without a fake input tool.', ELogLevel.WARN));
end;


