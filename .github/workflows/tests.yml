name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: windows-latest

    steps:
      - name: Fetch Simba 2 download URL
        id: simba-url
        run: |
          $url = "https://raw.githubusercontent.com/Villavu/Simba-Build-Archive/refs/heads/main/latest.win64"
          $response = Invoke-WebRequest -Uri $url -UseBasicParsing
          $baseUrl = $response.Content.Trim() -replace 'Win64\.zip\?raw=true$', ''
          Write-Output "Base URL: $baseUrl"
          echo "::set-output name=baseUrl::$baseUrl"
          New-Item -Path ".\Includes" -ItemType Directory

      - name: Download Simba 2.0 (64-bit)
        run: |
          $baseUrl = "${{ steps.simba-url.outputs.baseUrl }}"
          $downloadUrl = "$baseUrl" + "Win64.zip?raw=true"
          Write-Output "Download URL (64-bit): $downloadUrl"
          $outputFile = ".\download.zip"
          Invoke-WebRequest -Uri $downloadUrl -OutFile $outputFile
          Expand-Archive -Path $outputFile -DestinationPath . -Force
          Remove-Item -Path $outputFile -Force

      - name: Download Simba 2.0 (32-bit)
        run: |
          $baseUrl = "${{ steps.simba-url.outputs.baseUrl }}"
          $downloadUrl = "$baseUrl" + "Win32.zip?raw=true"
          Write-Output "Download URL (32-bit): $downloadUrl"
          $outputFile = ".\download.zip"
          Invoke-WebRequest -Uri $downloadUrl -OutFile $outputFile
          Expand-Archive -Path $outputFile -DestinationPath . -Force
          Remove-Item -Path $outputFile -Force

      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          path: ./Includes/SRLT

      - name: Run tests
        run: |
          # Get all .simba files in the tests folder, sorted numerically
          $testFiles = Get-ChildItem -Path ./Includes/SRLT/tests/*.simba | Sort-Object Name

          # Check if any test files were found
          if ($testFiles.Count -eq 0) {
              Write-Output "::error::No .simba test files found."
              exit 1
          }

          # Run each test file
          foreach ($testFile in $testFiles) {
              Write-Output "Running test: $($testFile.FullName)"

              $output = .\Simba-Win32.exe --run $testFile.FullName
              Write-Output $output
              if (-not ($output -match "Successfully executed in \d+ milliseconds\.")) {
                  Write-Output "::error::Simba-Win32.exe failed on $($testFile.Name)."
                  exit 1
              }

              $output = .\Simba-Win64.exe --run $testFile.FullName
              Write-Output $output
              if (-not ($output -match "Successfully executed in \d+ milliseconds\.")) {
                  Write-Output "::error::Simba-Win64.exe failed on $($testFile.Name)."
                  exit 1
              }
          }

