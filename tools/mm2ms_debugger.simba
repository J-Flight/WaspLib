{.$DEFINE WL_DISABLE_FAKE_INPUT}
{$I WaspLib/osrs.simba}

type
  TMM2MSDebugger = record
    Form: TLazForm;
    Image, Overlay: TImage;
    ImgBox: TImageBox;
    UseHeight: Boolean;
    OldChunks: TRSMapChunkArray;
    ChunkEdit: TLazEdit;
    ClientInfo: TLazLabel;
    Target: TTarget;

    ProjectionWidth, ProjectionHeight: TLazSpinEdit;
  end;

procedure TMM2MSDebugger.UpdateOverlay();
begin
  Self.Overlay := new TImage(Self.Image.Width, Self.Image.Height);
  Self.Overlay.FillWithAlpha($0);
  if Self.UseHeight and (Self.OldChunks <> []) then
    Map.DebugHeight(Self.Overlay, [ERSMinimapDot.PLAYER..ERSMinimapDot.ITEM])
  else
    Minimap.DebugTiles(Self.Overlay, [ERSMinimapDot.PLAYER..ERSMinimapDot.ITEM]);
end;

procedure TMM2MSDebugger.LoadFromClient(sender: TLazObject);
var
  zoom: Integer;
  tpa: TPointArray;
begin
  Target := Self.Target;
  zoom := Options.GetZoomLevel(False);
  RSClient.Mode := RSClient.GetMode();

  MM2MS.Projector.SetupProjection(RSClient.Mode);
  if Options.ZoomLevel > -1 then
    MM2MS.Projector.UpdateZoom(Options.ZoomLevel);

  Self.Image := Target.GetImage();
  Self.Form.Width := Self.Image.Width+14;
  Self.Form.Height := Self.Image.Height+90;

  if Self.Image = nil then
    raise GetDebugLn('MM2MS Debugger', 'Please target or load the client.');

  if Chat.IsOpen() then
  begin
    Self.Image.DrawColor := $809CAB;
    Self.Image.DrawBoxFilled(Chat.GetDisplayNameBox());
  end;

  if XPBar.IsOpen() then
  begin
    tpa := Self.Image.FindColor($FFFFFF, 0, XPBar.Bounds);
    if tpa <> [] then
    begin
      Self.Image.DrawColor := $FFFFFF;
      Self.Image.DrawBoxFilled(tpa.Bounds.Expand(1));
    end;
  end;

  Self.UpdateOverlay();
  Self.ImgBox.SetImage(Self.Image);
  Self.ClientInfo.Caption := 'Zoom: ' + ToStr(zoom).PadLeft(3, ' ') + ' Mode: ' + ToStr(RSClient.Mode);
  Target := new TTarget();
  Target.SetImage(Self.Image);
end;

procedure TMM2MSDebugger.OnHeightChange(sender: TLazObject);
begin
  Self.UseHeight := TLazCheckBox(sender).IsChecked();
  Self.UpdateOverlay();
  Self.ImgBox.Repaint();
end;

procedure TMM2MSDebugger.OnChunkChange(sender: TLazObject);
var
  chunks: TRSMapChunkArray;
begin
  chunks := TRSMapChunkArray.CreateFromString(TLazEdit(sender).Text);
  if chunks = [] then Exit;

  if chunks = Self.OldChunks then
    Exit;

  WriteLn GetDebugLn('MM2MS Debugger', 'Setting up make with ' + ToStr(chunks));
  Map.Loader.Free();
  Map.Setup(chunks);
  Self.OldChunks := chunks;
  Self.UpdateOverlay();
  Self.ImgBox.Repaint();
end;

procedure TMM2MSDebugger.OnProjWidthChange(sender: TLazObject);
var
  spinner: TLazSpinEdit;
begin
  spinner := TLazSpinEdit(sender);
  if spinner.Value = 0 then spinner.Value := 765;
  MM2MS.Projector.ProjectionWidth := spinner.Value;
  Self.LoadFromClient(sender);
end;

procedure TMM2MSDebugger.OnProjHeightChange(sender: TLazObject);
var
  spinner: TLazSpinEdit;
begin
  spinner := TLazSpinEdit(sender);
  if spinner.Value = 0 then spinner.Value := 503;
  MM2MS.Projector.ProjectionWidth := spinner.Value;
  Self.LoadFromClient(sender);
end;

{$H-}
procedure TMM2MSDebugger.OnPaint(sender: TImageBox; canvas: TImageBoxCanvas; r: TLazRect);
begin
  canvas.DrawImage(Self.Overlay, [0,0]);
end;
{$H+}

var
  MM2MSDebugger: TMM2MSDebugger;
  panel: TLazPanel;
  loadBtn: TLazButton;
  useHeight: TLazCheckBox;
  lbl0, lbl1: TLazLabel;
begin
  WebGraphGenerator.Disabled := True;
  MM2MSDebugger.Target := Target;
  MM2MSDebugger.Image := Target.GetImage();

  MM2MSDebugger.Form := TLazForm.Create(nil);
  MM2MSDebugger.Form.Color := $242322;
  MM2MSDebugger.Form.Width := 770;
  MM2MSDebugger.Form.Height := 508;
  MM2MSDebugger.Form.Position := ELazFormPosition.ScreenCenter;

  panel := TLazPanel.CreateEx(MM2MSDebugger.Form, 0, 0, 0, 38);
  panel.BevelWidth := 0;
  panel.Align := ELazAlign.Top;

  MM2MSDebugger.ProjectionHeight := TLazSpinEdit.CreateEx(panel);
  MM2MSDebugger.ProjectionHeight.Value := 503;
  MM2MSDebugger.ProjectionHeight.Align := ELazAlign.Left;
  MM2MSDebugger.ProjectionHeight.BorderSpacing.Around := 8;
  MM2MSDebugger.ProjectionHeight.OnChange := @MM2MSDebugger.OnProjHeightChange;

  lbl1 := TLazLabel.CreateEx(panel, 'Projection Height:');
  lbl1.Font.Color := $FFFFFF;
  lbl1.Align := ELazAlign.Left;
  lbl1.BorderSpacing.Top := 10;
  lbl1.BorderSpacing.Bottom := 10;
  lbl1.BorderSpacing.Left := 10;

  MM2MSDebugger.ProjectionWidth := TLazSpinEdit.CreateEx(panel);
  MM2MSDebugger.ProjectionWidth.Value := 765;
  MM2MSDebugger.ProjectionWidth.Align := ELazAlign.Left;
  MM2MSDebugger.ProjectionWidth.BorderSpacing.Around := 8;
  MM2MSDebugger.ProjectionWidth.OnChange := @MM2MSDebugger.OnProjWidthChange;

  lbl1 := TLazLabel.CreateEx(panel, 'Projection Width:');
  lbl1.Font.Color := $FFFFFF;
  lbl1.Align := ELazAlign.Left;
  lbl1.BorderSpacing.Top := 10;
  lbl1.BorderSpacing.Bottom := 10;
  lbl1.BorderSpacing.Left := 10;

  panel := TLazPanel.CreateEx(MM2MSDebugger.Form, 0, 0, 0, 38);
  panel.BevelWidth := 0;
  panel.Align := ELazAlign.Top;

  MM2MSDebugger.ClientInfo := TLazLabel.CreateEx(panel, 'Zoom:  -1 Mode: ' + ToStr(RSClient.Mode));
  MM2MSDebugger.ClientInfo.Font.Color := $FFFFFF;
  MM2MSDebugger.ClientInfo.Align := ELazAlign.Right;
  MM2MSDebugger.ClientInfo.BorderSpacing.Around := 10;

  loadBtn := TLazButton.CreateEx(panel, 'Load Client', 'Load and image from the client.', 0, 0, 80);
  loadBtn.OnClick := @MM2MSDebugger.LoadFromClient;
  loadBtn.Align := ELazAlign.Right;
  loadBtn.BorderSpacing.Around := 6;


  MM2MSDebugger.ChunkEdit := TLazEdit.CreateEx(panel, '','', 0, 0, 200);
  MM2MSDebugger.ChunkEdit.OnChange := @MM2MSDebugger.OnChunkChange;
  MM2MSDebugger.ChunkEdit.Align := ELazAlign.Left;
  MM2MSDebugger.ChunkEdit.BorderSpacing.Around := 8;

  lbl1 := TLazLabel.CreateEx(panel, 'Chunk:');
  lbl1.Font.Color := $FFFFFF;
  lbl1.Align := ELazAlign.Left;
  lbl1.BorderSpacing.Top := 10;
  lbl1.BorderSpacing.Bottom := 10;
  lbl1.BorderSpacing.Left := 10;

  lbl0 := TLazLabel.CreateEx(panel, 'Use heightmap');
  lbl0.Font.Color := $FFFFFF;
  lbl0.Align := ELazAlign.Left;
  lbl0.BorderSpacing.Top := 10;
  lbl0.BorderSpacing.Bottom := 10;
  lbl0.BorderSpacing.Right := 10;

  useHeight := TLazCheckBox.CreateEx(panel);
  useHeight.Align := ELazAlign.Left;
  useHeight.BorderSpacing.Top := 6;
  useHeight.BorderSpacing.Left := 6;
  useHeight.BorderSpacing.Bottom := 6;
  useHeight.BorderSpacing.Right := 2;
  useHeight.OnChange := @MM2MSDebugger.OnHeightChange;

  lbl0.AnchorHorizontally(useHeight);
  lbl0.OnClick := @FormUtils.OnCheckboxCaptionClick;

  MM2MSDebugger.Imgbox := TImageBox.CreateEx(MM2MSDebugger.Form);
  MM2MSDebugger.Imgbox.OnImgPaint := @MM2MSDebugger.OnPaint;
  MM2MSDebugger.Imgbox.Align := ELazAlign.Client;
  MM2MSDebugger.LoadFromClient(nil);
  MM2MSDebugger.Form.ShowModal();
end.
